--Generated By msgid-gen-lua Do not Edit

local PBMessageDataTwo = {}
local MsgCallBackNames = require("Net/MsgHandler/AutoGen/MsgCallBackNames")
local MsgDataNames = require("Net/MsgHandler/AutoGen/MsgDataNames")

--同步邀请消息给所有被邀请的玩家
local function Get_S_SynInviteJoinFamily(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_SynInviteJoinFamily, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_SynInviteJoinFamily, msg)
end

--退出家族
local function Get_S_ExitFamily(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_ExitFamily, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_ExitFamily, msg)
end

--切换家族排位
local function Get_S_ChangeFamilySortId(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_ChangeFamilySortId, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_ChangeFamilySortId, msg)
end

--踢出家族成员
local function Get_S_KickFamilyPlayer(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_KickFamilyPlayer, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_KickFamilyPlayer, msg)
end

--家族副本
local function Get_S_FamilyFB(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_FamilyFB, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_FamilyFB, msg)
end

--获取天梯面板数据
local function Get_S_GetTianti(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetTianti, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetTianti, msg)
end

--获取排行列表 分页	
local function Get_S_GetRankPageList(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetRankPageList, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetRankPageList, msg)
end

--开始匹配
local function Get_S_Match(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_Match, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_Match, msg)
end

--取消匹配	
local function Get_S_CancelMatch(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_CancelMatch, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_CancelMatch, msg)
end

--进入竞技场加载信息	
local function Get_S_SynLoadPkPlayer(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_SynLoadPkPlayer, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_SynLoadPkPlayer, msg)
end

--同步玩家竞技场结算信息
local function Get_S_SynEndTiantiPkPlayer(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_SynEndTiantiPkPlayer, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_SynEndTiantiPkPlayer, msg)
end

--使用竞技场初始物品	
local function Get_S_UseTiantiItem(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_UseTiantiItem, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_UseTiantiItem, msg)
end

--领取段位奖励
local function Get_S_GetStageReward(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetStageReward, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetStageReward, msg)
end

--获取商城物品列表
local function Get_S_GetMarketItemList(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetMarketItemList, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetMarketItemList, msg)
end

-- 商城物品购买
local function Get_S_MarketBuy(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_MarketBuy, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_MarketBuy, msg)
end

--签到返回	
local function Get_S_SynSign(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_SynSign, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_SynSign, msg)
end

--领取连续签到奖励
local function Get_S_GetConSignReward(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetConSignReward, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetConSignReward, msg)
end

--领取在线奖励返回
local function Get_S_GetReward(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetReward, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetReward, msg)
end

--改变的状态列表
local function Get_S_SynRewardList(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_SynRewardList, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_SynRewardList, msg)
end

--羽翼列表返回
local function Get_S_SynWingList(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_SynWingList, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_SynWingList, msg)
end

--装备羽翼返回
local function Get_S_PutonWing(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_PutonWing, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_PutonWing, msg)
end

--卸下羽翼返回	
local function Get_S_PutdownWing(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_PutdownWing, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_PutdownWing, msg)
end

--羽化
local function Get_S_Evolve(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_Evolve, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_Evolve, msg)
end

--获得羽翼
local function Get_S_AddWing(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_AddWing, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_AddWing, msg)
end

--羽翼降解
local function Get_S_UnEvolve(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_UnEvolve, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_UnEvolve, msg)
end

--仇敌列表返回
local function Get_S_SynEnemyList(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_SynEnemyList, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_SynEnemyList, msg)
end

--删除仇敌返回	
local function Get_S_DeleteEnemy(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_DeleteEnemy, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_DeleteEnemy, msg)
end

--追踪返回	
local function Get_S_TrackEnemy(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_TrackEnemy, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_TrackEnemy, msg)
end

--获取活动列表
local function Get_S_GetActivityList(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetActivityList, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetActivityList, msg)
end

--激活VIP
local function Get_S_ActiviteVip(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_ActiviteVip, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_ActiviteVip, msg)
end

--领取VIP奖励
local function Get_S_GetVipActReward(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetVipActReward, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetVipActReward, msg)
end

--领取每日福利
local function Get_S_GetDailyReward(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetDailyReward, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetDailyReward, msg)
end

--获取玩家VIP信息
local function Get_S_GetPlayerVip(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetPlayerVip, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetPlayerVip, msg)
end

--每日奖励领取状态 
local function Get_S_GetDailyRewardState(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetDailyRewardState, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetDailyRewardState, msg)
end

--每日VIP福利领取
local function Get_S_GetVipWelfare(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetVipWelfare, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetVipWelfare, msg)
end

--每日VIP福利领取状态
local function Get_S_GetVipWelfareState(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetVipWelfareState, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetVipWelfareState, msg)
end

--获取充值活动相关数据
local function Get_S_GetPayActData(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetPayActData, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetPayActData, msg)
end

--获取首冲奖励
local function Get_S_GetFristPayReward(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetFristPayReward, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetFristPayReward, msg)
end

--获取累计充值奖励
local function Get_S_GetTotalRrechargeReward(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetTotalRrechargeReward, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetTotalRrechargeReward, msg)
end

--获取每天累计充值奖励
local function Get_S_GetDailyRrechargeReward(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetDailyRrechargeReward, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetDailyRrechargeReward, msg)
end

--领取成长基金
local function Get_S_GetGrowthFund(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetGrowthFund, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetGrowthFund, msg)
end

--领取全民福利
local function Get_S_GetNationalWelfare(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetNationalWelfare, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetNationalWelfare, msg)
end

--获取转盘相关数据
local function Get_S_GetTurntableData(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetTurntableData, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetTurntableData, msg)
end

--转盘抽奖
local function Get_S_TurntableDraw(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_TurntableDraw, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_TurntableDraw, msg)
end

--获取转盘抽奖榜单信息
local function Get_S_GetTurnRecList(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetTurnRecList, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetTurnRecList, msg)
end

--陵墓面板数据
local function Get_S_GetTombData(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetTombData, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetTombData, msg)
end

--探索陵室
local function Get_S_Tomb(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_Tomb, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_Tomb, msg)
end

--切换陵墓	
local function Get_S_ChangeTomb(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_ChangeTomb, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_ChangeTomb, msg)
end

--获取累计消费奖励
local function Get_S_GetTotalSpendReward(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetTotalSpendReward, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetTotalSpendReward, msg)
end

--购买成长基金
local function Get_S_BuyGrowthFound(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_BuyGrowthFound, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_BuyGrowthFound, msg)
end

--领取开服七天乐奖励
local function Get_S_GetOpenServerReward(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetOpenServerReward, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetOpenServerReward, msg)
end

--获取开服七天乐数据
local function Get_S_GetOpenServerData(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetOpenServerData, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetOpenServerData, msg)
end

--获取七天累计充值数据	
local function Get_S_GetSevenPayData(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetSevenPayData, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetSevenPayData, msg)
end

--获取购买神器数据	
local function Get_S_BuyArtifactData(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_BuyArtifactData, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_BuyArtifactData, msg)
end

--获取首充相关数据
local function Get_S_GetFristPayData(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetFristPayData, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetFristPayData, msg)
end

--获取礼包码奖励
local function Get_S_GetGiftAward(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetGiftAward, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetGiftAward, msg)
end

--获取冲级奖励
local function Get_S_GetLevelAward(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetLevelAward, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetLevelAward, msg)
end

--获取战力奖励
local function Get_S_GetBattleValueAward(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetBattleValueAward, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetBattleValueAward, msg)
end

--获取等级奖励数据
local function Get_S_GetLevelAwardData(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetLevelAwardData, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetLevelAwardData, msg)
end

--获取战力奖励数据
local function Get_S_GetBVAwardData(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetBVAwardData, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetBVAwardData, msg)
end

--获取实名认证信息
local function Get_S_GetIdentCheckInfo(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetIdentCheckInfo, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetIdentCheckInfo, msg)
end

-- 实名认证
local function Get_S_IdentityCheck(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_IdentityCheck, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_IdentityCheck, msg)
end

-- 在线时长提示
local function Get_S_OnlineTip(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_OnlineTip, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_OnlineTip, msg)
end

-- 获取实名认证奖励
local function Get_S_GetIdCheckAward(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetIdCheckAward, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetIdCheckAward, msg)
end

--战力榜
local function Get_S_BattleValueRank(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_BattleValueRank, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_BattleValueRank, msg)
end

--神兵榜
local function Get_S_EquipRank(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_EquipRank, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_EquipRank, msg)
end

--财富榜	
local function Get_S_GoldRank(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GoldRank, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GoldRank, msg)
end

--都护府列表返回
local function Get_S_GetGuildList(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetGuildList, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetGuildList, msg)
end

--获取都护府信息返回
local function Get_S_GetGuild(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetGuild, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetGuild, msg)
end

--获取成员列表返回	
local function Get_S_GetGuildPlayerList(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetGuildPlayerList, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetGuildPlayerList, msg)
end

--申请都护府返回
local function Get_S_ApplyGuild(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_ApplyGuild, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_ApplyGuild, msg)
end

--一键申请都护府返回
local function Get_S_QuickApply(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_QuickApply, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_QuickApply, msg)
end

--申请列表返回	
local function Get_S_GetApplyList(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetApplyList, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetApplyList, msg)
end

--同意申请返回	
local function Get_S_AgreeApply(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_AgreeApply, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_AgreeApply, msg)
end

--拒绝申请返回	
local function Get_S_RefuseApply(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_RefuseApply, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_RefuseApply, msg)
end

--清空申请列表返回	
local function Get_S_ClearApplys(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_ClearApplys, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_ClearApplys, msg)
end

--设置自动接受申请返回
local function Get_S_AutoApply(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_AutoApply, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_AutoApply, msg)
end

--邀请进入都护府返回
local function Get_S_InviteJoin(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_InviteJoin, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_InviteJoin, msg)
end

--通知被邀请者
local function Get_S_OfferInviteJoin(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_OfferInviteJoin, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_OfferInviteJoin, msg)
end

--同意邀请进入返回
local function Get_S_AgreeInviteJoin(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_AgreeInviteJoin, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_AgreeInviteJoin, msg)
end

--退出都护府返回
local function Get_S_QuitGuild(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_QuitGuild, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_QuitGuild, msg)
end

--转让帮主返回
local function Get_S_ChangeGuilder(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_ChangeGuilder, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_ChangeGuilder, msg)
end

--踢出帮派返回
local function Get_S_KickGuild(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_KickGuild, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_KickGuild, msg)
end

--任免职位返回
local function Get_S_ChangeGuildRole(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_ChangeGuildRole, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_ChangeGuildRole, msg)
end

--升级帮派返回
local function Get_S_UpgradeGuild(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_UpgradeGuild, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_UpgradeGuild, msg)
end

--修改公告返回
local function Get_S_ModifyNotice(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_ModifyNotice, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_ModifyNotice, msg)
end

--获取捐献各次数返回
local function Get_S_GetDonateTimes(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetDonateTimes, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetDonateTimes, msg)
end

--捐献返回
local function Get_S_Donate(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_Donate, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_Donate, msg)
end

--宣战信息列表返回
local function Get_S_GetGuildWarList(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetGuildWarList, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetGuildWarList, msg)
end

--发起宣战返回
local function Get_S_GuildWar(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GuildWar, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GuildWar, msg)
end

--研发都护府技能返回
local function Get_S_UpgradeGuildSkill(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_UpgradeGuildSkill, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_UpgradeGuildSkill, msg)
end

--学习都护府技能返回
local function Get_S_StudyGuildSkill(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_StudyGuildSkill, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_StudyGuildSkill, msg)
end

--已学习和研发的技能列表返回
local function Get_S_GetGuildSkills(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetGuildSkills, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetGuildSkills, msg)
end

--城战面板数据返回
local function Get_S_GetGuildFightData(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetGuildFightData, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetGuildFightData, msg)
end

--已报名攻城列表返回
local function Get_S_GetGuildFights(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetGuildFights, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetGuildFights, msg)
end

--联盟列表返回
local function Get_S_GetUnions(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetUnions, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetUnions, msg)
end

--报名城战返回
local function Get_S_ApplyGuildFight(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_ApplyGuildFight, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_ApplyGuildFight, msg)
end

--申请联盟
local function Get_S_ApplyUnion(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_ApplyUnion, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_ApplyUnion, msg)
end

--同意加入联盟
local function Get_S_AgreeJoinUnion(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_AgreeJoinUnion, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_AgreeJoinUnion, msg)
end

--获取税收面板数据
local function Get_S_GetRevenueData(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetRevenueData, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetRevenueData, msg)
end

--领取税收
local function Get_S_ReceiveRevenue(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_ReceiveRevenue, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_ReceiveRevenue, msg)
end

--领取俸禄
local function Get_S_ReceiveSalary(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_ReceiveSalary, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_ReceiveSalary, msg)
end

--领取礼包
local function Get_S_ReceiveGift(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_ReceiveGift, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_ReceiveGift, msg)
end

--优惠购买记录
local function Get_S_GetGuildBuyData(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetGuildBuyData, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetGuildBuyData, msg)
end

--优惠购买
local function Get_S_GuildBuy(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GuildBuy, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GuildBuy, msg)
end

--凌烟阁
local function Get_S_GuildFB(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GuildFB, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GuildFB, msg)
end

--提交攻城令
local function Get_S_SubmitItem(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_SubmitItem, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_SubmitItem, msg)
end

--获取领地面板数据
local function Get_S_GetManorData(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetManorData, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetManorData, msg)
end

--召唤boss
local function Get_S_CallManorBoss(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_CallManorBoss, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_CallManorBoss, msg)
end

--喂养boss
local function Get_S_FeedManorBoss(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_FeedManorBoss, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_FeedManorBoss, msg)
end

--玩家已激活熔炉列表
local function Get_S_GetPlayerFurnaceList(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_GetPlayerFurnaceList, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_GetPlayerFurnaceList, msg)
end

--升级熔炉返回
local function Get_S_UpgradeFurnace(msg)
	--TODO:根据需要打开注释的代码，然后在对应的函数里面写处理逻辑)
	DataManager:GetInstance():Broadcast(MsgCallBackNames.S_UpgradeFurnace, msg)
	--DataManager:GetInstance():Broadcast(MsgDataNames.S_UpgradeFurnace, msg)
end

PBMessageDataTwo.Get_S_SynInviteJoinFamily=Get_S_SynInviteJoinFamily
PBMessageDataTwo.Get_S_ExitFamily=Get_S_ExitFamily
PBMessageDataTwo.Get_S_ChangeFamilySortId=Get_S_ChangeFamilySortId
PBMessageDataTwo.Get_S_KickFamilyPlayer=Get_S_KickFamilyPlayer
PBMessageDataTwo.Get_S_FamilyFB=Get_S_FamilyFB
PBMessageDataTwo.Get_S_GetTianti=Get_S_GetTianti
PBMessageDataTwo.Get_S_GetRankPageList=Get_S_GetRankPageList
PBMessageDataTwo.Get_S_Match=Get_S_Match
PBMessageDataTwo.Get_S_CancelMatch=Get_S_CancelMatch
PBMessageDataTwo.Get_S_SynLoadPkPlayer=Get_S_SynLoadPkPlayer
PBMessageDataTwo.Get_S_SynEndTiantiPkPlayer=Get_S_SynEndTiantiPkPlayer
PBMessageDataTwo.Get_S_UseTiantiItem=Get_S_UseTiantiItem
PBMessageDataTwo.Get_S_GetStageReward=Get_S_GetStageReward
PBMessageDataTwo.Get_S_GetMarketItemList=Get_S_GetMarketItemList
PBMessageDataTwo.Get_S_MarketBuy=Get_S_MarketBuy
PBMessageDataTwo.Get_S_SynSign=Get_S_SynSign
PBMessageDataTwo.Get_S_GetConSignReward=Get_S_GetConSignReward
PBMessageDataTwo.Get_S_GetReward=Get_S_GetReward
PBMessageDataTwo.Get_S_SynRewardList=Get_S_SynRewardList
PBMessageDataTwo.Get_S_SynWingList=Get_S_SynWingList
PBMessageDataTwo.Get_S_PutonWing=Get_S_PutonWing
PBMessageDataTwo.Get_S_PutdownWing=Get_S_PutdownWing
PBMessageDataTwo.Get_S_Evolve=Get_S_Evolve
PBMessageDataTwo.Get_S_AddWing=Get_S_AddWing
PBMessageDataTwo.Get_S_UnEvolve=Get_S_UnEvolve
PBMessageDataTwo.Get_S_SynEnemyList=Get_S_SynEnemyList
PBMessageDataTwo.Get_S_DeleteEnemy=Get_S_DeleteEnemy
PBMessageDataTwo.Get_S_TrackEnemy=Get_S_TrackEnemy
PBMessageDataTwo.Get_S_GetActivityList=Get_S_GetActivityList
PBMessageDataTwo.Get_S_ActiviteVip=Get_S_ActiviteVip
PBMessageDataTwo.Get_S_GetVipActReward=Get_S_GetVipActReward
PBMessageDataTwo.Get_S_GetDailyReward=Get_S_GetDailyReward
PBMessageDataTwo.Get_S_GetPlayerVip=Get_S_GetPlayerVip
PBMessageDataTwo.Get_S_GetDailyRewardState=Get_S_GetDailyRewardState
PBMessageDataTwo.Get_S_GetVipWelfare=Get_S_GetVipWelfare
PBMessageDataTwo.Get_S_GetVipWelfareState=Get_S_GetVipWelfareState
PBMessageDataTwo.Get_S_GetPayActData=Get_S_GetPayActData
PBMessageDataTwo.Get_S_GetFristPayReward=Get_S_GetFristPayReward
PBMessageDataTwo.Get_S_GetTotalRrechargeReward=Get_S_GetTotalRrechargeReward
PBMessageDataTwo.Get_S_GetDailyRrechargeReward=Get_S_GetDailyRrechargeReward
PBMessageDataTwo.Get_S_GetGrowthFund=Get_S_GetGrowthFund
PBMessageDataTwo.Get_S_GetNationalWelfare=Get_S_GetNationalWelfare
PBMessageDataTwo.Get_S_GetTurntableData=Get_S_GetTurntableData
PBMessageDataTwo.Get_S_TurntableDraw=Get_S_TurntableDraw
PBMessageDataTwo.Get_S_GetTurnRecList=Get_S_GetTurnRecList
PBMessageDataTwo.Get_S_GetTombData=Get_S_GetTombData
PBMessageDataTwo.Get_S_Tomb=Get_S_Tomb
PBMessageDataTwo.Get_S_ChangeTomb=Get_S_ChangeTomb
PBMessageDataTwo.Get_S_GetTotalSpendReward=Get_S_GetTotalSpendReward
PBMessageDataTwo.Get_S_BuyGrowthFound=Get_S_BuyGrowthFound
PBMessageDataTwo.Get_S_GetOpenServerReward=Get_S_GetOpenServerReward
PBMessageDataTwo.Get_S_GetOpenServerData=Get_S_GetOpenServerData
PBMessageDataTwo.Get_S_GetSevenPayData=Get_S_GetSevenPayData
PBMessageDataTwo.Get_S_BuyArtifactData=Get_S_BuyArtifactData
PBMessageDataTwo.Get_S_GetFristPayData=Get_S_GetFristPayData
PBMessageDataTwo.Get_S_GetGiftAward=Get_S_GetGiftAward
PBMessageDataTwo.Get_S_GetLevelAward=Get_S_GetLevelAward
PBMessageDataTwo.Get_S_GetBattleValueAward=Get_S_GetBattleValueAward
PBMessageDataTwo.Get_S_GetLevelAwardData=Get_S_GetLevelAwardData
PBMessageDataTwo.Get_S_GetBVAwardData=Get_S_GetBVAwardData
PBMessageDataTwo.Get_S_GetIdentCheckInfo=Get_S_GetIdentCheckInfo
PBMessageDataTwo.Get_S_IdentityCheck=Get_S_IdentityCheck
PBMessageDataTwo.Get_S_OnlineTip=Get_S_OnlineTip
PBMessageDataTwo.Get_S_GetIdCheckAward=Get_S_GetIdCheckAward
PBMessageDataTwo.Get_S_BattleValueRank=Get_S_BattleValueRank
PBMessageDataTwo.Get_S_EquipRank=Get_S_EquipRank
PBMessageDataTwo.Get_S_GoldRank=Get_S_GoldRank
PBMessageDataTwo.Get_S_GetGuildList=Get_S_GetGuildList
PBMessageDataTwo.Get_S_GetGuild=Get_S_GetGuild
PBMessageDataTwo.Get_S_GetGuildPlayerList=Get_S_GetGuildPlayerList
PBMessageDataTwo.Get_S_ApplyGuild=Get_S_ApplyGuild
PBMessageDataTwo.Get_S_QuickApply=Get_S_QuickApply
PBMessageDataTwo.Get_S_GetApplyList=Get_S_GetApplyList
PBMessageDataTwo.Get_S_AgreeApply=Get_S_AgreeApply
PBMessageDataTwo.Get_S_RefuseApply=Get_S_RefuseApply
PBMessageDataTwo.Get_S_ClearApplys=Get_S_ClearApplys
PBMessageDataTwo.Get_S_AutoApply=Get_S_AutoApply
PBMessageDataTwo.Get_S_InviteJoin=Get_S_InviteJoin
PBMessageDataTwo.Get_S_OfferInviteJoin=Get_S_OfferInviteJoin
PBMessageDataTwo.Get_S_AgreeInviteJoin=Get_S_AgreeInviteJoin
PBMessageDataTwo.Get_S_QuitGuild=Get_S_QuitGuild
PBMessageDataTwo.Get_S_ChangeGuilder=Get_S_ChangeGuilder
PBMessageDataTwo.Get_S_KickGuild=Get_S_KickGuild
PBMessageDataTwo.Get_S_ChangeGuildRole=Get_S_ChangeGuildRole
PBMessageDataTwo.Get_S_UpgradeGuild=Get_S_UpgradeGuild
PBMessageDataTwo.Get_S_ModifyNotice=Get_S_ModifyNotice
PBMessageDataTwo.Get_S_GetDonateTimes=Get_S_GetDonateTimes
PBMessageDataTwo.Get_S_Donate=Get_S_Donate
PBMessageDataTwo.Get_S_GetGuildWarList=Get_S_GetGuildWarList
PBMessageDataTwo.Get_S_GuildWar=Get_S_GuildWar
PBMessageDataTwo.Get_S_UpgradeGuildSkill=Get_S_UpgradeGuildSkill
PBMessageDataTwo.Get_S_StudyGuildSkill=Get_S_StudyGuildSkill
PBMessageDataTwo.Get_S_GetGuildSkills=Get_S_GetGuildSkills
PBMessageDataTwo.Get_S_GetGuildFightData=Get_S_GetGuildFightData
PBMessageDataTwo.Get_S_GetGuildFights=Get_S_GetGuildFights
PBMessageDataTwo.Get_S_GetUnions=Get_S_GetUnions
PBMessageDataTwo.Get_S_ApplyGuildFight=Get_S_ApplyGuildFight
PBMessageDataTwo.Get_S_ApplyUnion=Get_S_ApplyUnion
PBMessageDataTwo.Get_S_AgreeJoinUnion=Get_S_AgreeJoinUnion
PBMessageDataTwo.Get_S_GetRevenueData=Get_S_GetRevenueData
PBMessageDataTwo.Get_S_ReceiveRevenue=Get_S_ReceiveRevenue
PBMessageDataTwo.Get_S_ReceiveSalary=Get_S_ReceiveSalary
PBMessageDataTwo.Get_S_ReceiveGift=Get_S_ReceiveGift
PBMessageDataTwo.Get_S_GetGuildBuyData=Get_S_GetGuildBuyData
PBMessageDataTwo.Get_S_GuildBuy=Get_S_GuildBuy
PBMessageDataTwo.Get_S_GuildFB=Get_S_GuildFB
PBMessageDataTwo.Get_S_SubmitItem=Get_S_SubmitItem
PBMessageDataTwo.Get_S_GetManorData=Get_S_GetManorData
PBMessageDataTwo.Get_S_CallManorBoss=Get_S_CallManorBoss
PBMessageDataTwo.Get_S_FeedManorBoss=Get_S_FeedManorBoss
PBMessageDataTwo.Get_S_GetPlayerFurnaceList=Get_S_GetPlayerFurnaceList
PBMessageDataTwo.Get_S_UpgradeFurnace=Get_S_UpgradeFurnace

return PBMessageDataTwo